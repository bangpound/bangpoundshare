<?php

/**
 * Implement hook_ctools_plugin_directory().
 */
function bangpoundshare_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && ($plugin == 'export_ui' || $plugin == 'access')) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_ctools_plugin_api().
 */
function bangpoundshare_ctools_plugin_api($module, $api) {
  if ($module == 'bangpoundshare' && $api == 'links') {
    return array('version' => 1);
  }
}

/**
 * Implement hook_entity_view().
 */
function bangpoundshare_entity_view($entity, $type, $view_mode, $langcode) {
  $fast_access = bangpoundshare_fast_access_cache();
  if (!isset($fast_access[$type]) || (!in_array($view_mode, $fast_access[$type]))) {
    return;
  }

  ctools_include('export');
  ctools_include('context');

  // Load up any contexts we might be using.
  $context = array();
  $context[] = ctools_context_create('entity:'. $type, $entity);
  $context[] = ctools_context_create('string', $view_mode);

  $links = array();
  $args = array('entity_type' => $type);
  $items = ctools_export_load_object('bangpoundshare_links', 'conditions', $args);
  foreach ($items as $item) {

    if (empty($item) || !empty($item->disabled)) {
      continue;
    }

    // Every item in this set will have the same requiredcontexts which are determined by
    // the entity and the view mode.
    if (!isset($contexts)) {
      $contexts = ctools_context_match_required_contexts($item->requiredcontexts, $context);
    }
    $item->context = ctools_context_load_contexts($item, FALSE, $contexts);

    if (!ctools_access($item->access, $item->context)) {
      continue;
    }

    $link = array();

    $link['path'] = ctools_context_keyword_substitute($item->path, array(), $item->context, array('sanitize' => FALSE));
    $url = parse_url($link['path']);
    if (isset($url['query'])) {
      $link['path'] = strtr($link['path'], array('?' . $url['query'] => ''));
      $link['query'] = drupal_get_query_array($url['query']);
    }
    if (isset($url['fragment'])) {
      $link['path'] = strtr($link['path'], array('#' . $url['fragment'] => ''));
      $link['fragment'] = $url['fragment'];
    }
    $link['href'] = rtrim($link['path'], '?');
    $link['title'] = $item->text;
    $link['html'] = !empty($item->html) ? TRUE : FALSE;
    $link['attributes'] = $item->attributes;

    $links[$item->name] = $link;
  }

  if (!empty($links)) {
    $entity->content['links']['sharing'] = array(
      '#theme' => 'links__'. $type .'__sharing',
      '#links' => $links,
      '#attributes' => array('class' => array('links', 'inline')),
    );
    $entity->content['links']['#attached']['library'][] = array('bangpoundshare', 'links');
  }
}

/**
 * Implements hook_library().
 */
function bangpoundshare_library() {
  $libraries['links'] = array(
    'title' => '!&# Share links',
    'version' => '1.0-dev',
    'js' => array(
      drupal_get_path('module', 'bangpoundshare') . '/bangpoundshare.links.js' => array(),
    ),
  );
  return $libraries;
}

function bangpoundshare_fast_access_cache() {
  $fast_access = &drupal_static(__FUNCTION__);

  // Grab from cache or build the array.
  if (!isset($fast_access)) {
    if ($cache = cache_get('bangpoundshare_fast_access')) {
      $fast_access = $cache->data;
    }
    else {
      $fast_access = array();

      // Identify entity types and view modes so hook_entity_view can run
      // only for those combinations where links are configured to display.
      $items = ctools_export_load_object('bangpoundshare_links');
      $fast_access = array();
      foreach ($items as $item) {
        if (empty($item) || !empty($item->disabled)) {
          continue;
        }

        $entity_type = $item->entity_type;

        foreach ($item->access['plugins'] as $plugin) {
          if (strpos($plugin['name'], 'entity_view_mode') === 0) {

            // Merge submitted values into existing fast access settings.
            if (!isset($fast_access[$entity_type])) {
              $fast_access[$entity_type] = array();
            }

            $fast_access[$entity_type] = array_unique(array_merge($fast_access[$entity_type],
              array_values($plugin['settings']['view_mode'])));
          }
        }
      }

      cache_set('bangpoundshare_fast_access', $fast_access);
    }
  }

  return $fast_access;
}
